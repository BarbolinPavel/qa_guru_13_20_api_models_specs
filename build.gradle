plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.9.6'
    id "io.freefair.lombok" version "6.0.0-m2"
}

repositories {
    mavenCentral()
}

def allureVersion = "2.19.0",
    selenideVersion = "6.5.0",
    restAssuredVersion = "4.3.1",
    assertJVersion = "3.23.1",
    junitVersion = "5.9.0",
    slf4jVersion = "2.0.3",
    freemarkerVersion = "2.3.31"


allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.assertj:assertj-core:$assertJVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.freemarker:freemarker:$freemarkerVersion",
            "com.github.javafaker:javafaker:1.0.2",
            'org.aeonbits.owner:owner:1.0.12',
            'org.aspectj:aspectjweaver:1.9.9.1',
            "com.fasterxml.jackson.core:jackson-databind:2.7.9.5"
    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task testWithPojo(type: Test){
    useJUnitPlatform {
        includeTags "checkedApiPojo"
    }
}

task testWithLombok(type: Test){
    useJUnitPlatform {
        includeTags "checkedApiLombok"
    }
}